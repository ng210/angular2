0-1-2-3
4-5-6-7
8-9-A-B
C-D-E-F

float circles(in vec2 uv, in vec2 v) {
    float col = 1.0;
    float d = distance(uv, v);
    float t = .98;	//*(sin(iGlobalTime*0.5)+1.0);
    float e = .3;
    float f = e + (1.0 - e)*.5*(cos(3.14*d)+1.0);
    //float f = 1.0 - step(e, d);
    col = col*(sin(t*(4.0*d - 0.0*iGlobalTime))/2.0+.5);
    //col = col*(step(.1, sin(t*(50.0*d - 0.0*iGlobalTime))/2.0+.5));
    col = col*f;
	return col;
}

float l = 0.05;
vec2 g = vec2(29.0, 31.0);
vec2 s = vec2(1.5, 1.7);

vec2 move(float dx, float dy) {
    vec2 v = vec2(.0, .0);
    v.x = .5+.4*sin(dx*iGlobalTime-.3*dx)*sin(dy*iGlobalTime-.7*dx);
    v.y = .5+.4*cos(dy*iGlobalTime-.1*dy)*cos(dx*iGlobalTime-.4*dy);
    return v;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    s *= abs(sin(.01*iGlobalTime));
    g *= abs(sin(.1*iGlobalTime));
	vec2 uv = fragCoord.xy / iResolution.xy;
    vec2 vu = vec2(uv.y, uv.x);
    uv += .2*(sin(s*(3.14*uv + iGlobalTime))*sin(s*(3.14*vu + iGlobalTime)));
    vec3 col = vec3(.0, .0, .0);
    col += vec3(1.0, l, l)*circles(uv, move(2.1, 1.9));
    col += vec3(l, 1.0, l)*circles(uv, move(1.3, -2.1));
    col += vec3(l, l, 1.0)*circles(uv, move(-1.5, -1.3));
    vec2 dv = 10.0*l+.5*(1.0+sin(uv*g+s*sin(iGlobalTime)));
    vec3 color = col*dv.x*dv.y;
    fragColor = vec4(color, 1.0);
}
